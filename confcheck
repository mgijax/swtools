#!/usr/local/bin/python

# compares two configuration files, to see if the same variables are defined
# in both.  (does not compare values, just the names of the configuration
# variables themselves)  Ideally, this would be used to compare a config file
# with its defaults file.

import os
import sys
import string
import regex

def getVariables(filename):
	fp = open (filename, 'r')
	lines = fp.readlines()
	fp.close()

	variables = []
	for line in map(string.strip, lines):
		if line == '':			# blank line
			continue
		if line[0] == '#':		# comment line
			continue

		items = string.split(line)

		variables.append (items[0])
	variables.sort()
	return variables
		
def output (file1, file2, diff):
	title = 'Variables in %s but not %s' % (file1, file2)
	line = '-' * len(title)

	print title
	print line
	for item in diff:
		print item
	return

def main():
	if len(sys.argv) != 3:
		print 'Usage: %s <defaults file> <config file>' % sys.argv[0]
		sys.exit(-1)

	default = sys.argv[1]
	config = sys.argv[2]

	for file in [ default, config ]:
		if not os.path.isfile(default):
			print 'cannot find file: %s' % file
			sys.exit(-1)

	defaultVars = getVariables(default)
	configVars = getVariables(config)

	defaultDiff = []
	configDiff = []

	for variable in defaultVars:
		if variable not in configVars:
			defaultDiff.append (variable)

	for variable in configVars:
		if variable not in defaultVars:
			configDiff.append (variable)
	
	output (default, config, defaultDiff)
	print
	output (config, default, configDiff)
	return

if __name__ == '__main__':
	main()
