#!./python

# translate instances of WIFetch calls which use a "page" parameter to use
# the value of that parameter as the name of the page instead

import sys
import re
import os

USAGE = '''Usage: %s
        This script is a command-line filter; input should be piped into it
        as stdin, and output is written to stdout.  It translates URLs for
        the javawi2 product to be more friendly for log processing programs.

        For example, this URL:
            http://a.b.c.d/javawi2/servlet/WIFetch?page=markerDetail&key=10603
        would be translated to:
            http://a.b.c.d/javawi2/markerDetail?key=10603

        Example:  cat access.log | %s > temp.out
''' % (sys.argv[0], sys.argv[0])

pageRegex = re.compile ('(servlet/WIFetch\\?)([^ "]*)page=([^ &"]*)(&?)')

def bailout (msg, showUsage = False):
        if showUsage:
                sys.stderr.write (USAGE + '\n')
        sys.stderr.write ('Error: %s\n' % msg)
        sys.exit(1)

def translated (line):
        match = pageRegex.search(line)
        while match:
                pageName = match.group(3)
                preParms = match.group(2)
                amp = match.group(4)

                if (preParms == None) or (preParms == ''):
                        preParms = ''
                        amp = ''
                elif preParms[-1] == '&':
                        preParms = preParms[:-1]

                line = line[:match.start(0)] + pageName + '?' + preParms + \
                        amp + line[match.end(0):]

                match = pageRegex.search(line)
        return line

def main():
        line = sys.stdin.readline()
        while line:
                print(line, end=' ')
                print(translated(line[:-1]))
                print()
                line = sys.stdin.readline()
        return

if __name__ == '__main__':
        main()
